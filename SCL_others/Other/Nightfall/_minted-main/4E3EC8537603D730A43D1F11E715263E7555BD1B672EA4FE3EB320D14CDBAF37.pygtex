\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k+kn}{import} \PYG{n+nn}{java.io.*}\PYG{o}{;} \PYG{k+kn}{import} \PYG{n+nn}{java.util.*}\PYG{o}{;} \PYG{k+kn}{import} \PYG{n+nn}{java.math.*}\PYG{o}{;}
\PYG{k+kd}{public} \PYG{k+kd}{class} \PYG{n+nc}{Main} \PYG{o}{\PYGZob{}}
\PYG{k+kd}{static} \PYG{k+kd}{class} \PYG{n+nc}{solver} \PYG{o}{\PYGZob{}} \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{run}\PYG{o}{(}\PYG{n}{Scanner} \PYG{n}{cin}\PYG{o}{,} \PYG{n}{PrintStream} \PYG{n}{out}\PYG{o}{)} \PYG{o}{\PYGZob{}\PYGZcb{}} \PYG{o}{\PYGZcb{}}
\PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kt}{void} \PYG{n+nf}{main}\PYG{o}{(}\PYG{n}{String}\PYG{o}{[]} \PYG{n}{args}\PYG{o}{)} \PYG{o}{\PYGZob{}}
\PYG{c+c1}{// Fast Reader \PYGZam{} Big Numbers}
\PYG{n}{InputReader} \PYG{n}{in} \PYG{o}{=} \PYG{k}{new} \PYG{n}{InputReader}\PYG{o}{(}\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{in}\PYG{o}{);}
\PYG{n}{PrintWriter} \PYG{n}{out} \PYG{o}{=} \PYG{k}{new} \PYG{n}{PrintWriter}\PYG{o}{(}\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{);}
\PYG{n}{BigInteger} \PYG{n}{c} \PYG{o}{=} \PYG{n}{in}\PYG{o}{.}\PYG{n+na}{nextInt}\PYG{o}{();}
\PYG{n}{out}\PYG{o}{.}\PYG{n+na}{println}\PYG{o}{(}\PYG{n}{c}\PYG{o}{.}\PYG{n+na}{toString}\PYG{o}{(}\PYG{l+m+mi}{8}\PYG{o}{));} \PYG{n}{out}\PYG{o}{.}\PYG{n+na}{close}\PYG{o}{();} \PYG{c+c1}{// as Oct}
\PYG{n}{BigDecimal} \PYG{n}{d} \PYG{o}{=} \PYG{k}{new} \PYG{n}{BigDecimal}\PYG{o}{(}\PYG{l+m+mf}{10.0}\PYG{o}{);}
\PYG{c+c1}{// d=d.divide(num, length, BigDecimal.ROUND\PYGZus{}HALF\PYGZus{}UP)}
\PYG{n}{d}\PYG{o}{.}\PYG{n+na}{setScale}\PYG{o}{(}\PYG{l+m+mi}{2}\PYG{o}{,} \PYG{n}{BigDecimal}\PYG{o}{.}\PYG{n+na}{ROUND\PYGZus{}FLOOR}\PYG{o}{);} \PYG{c+c1}{// 用于输出}
\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{.}\PYG{n+na}{printf}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}.6f\PYGZbs{}n\PYGZdq{}}\PYG{o}{,} \PYG{l+m+mf}{1.23}\PYG{o}{);} \PYG{c+c1}{// C 格式}
\PYG{n}{BigInteger} \PYG{n}{num} \PYG{o}{=} \PYG{n}{BigInteger}\PYG{o}{.}\PYG{n+na}{valueOf}\PYG{o}{(}\PYG{l+m+mi}{6}\PYG{o}{);}
\PYG{n}{num}\PYG{o}{.}\PYG{n+na}{isProbablePrime}\PYG{o}{(}\PYG{l+m+mi}{10}\PYG{o}{);} \PYG{c+c1}{// 1 \PYGZhy{} 1 / 2 \PYGZca{} certainty}
\PYG{n}{BigInteger} \PYG{n}{rev} \PYG{o}{=} \PYG{n}{num}\PYG{o}{.}\PYG{n+na}{modPow}\PYG{o}{(}\PYG{n}{BigInteger}\PYG{o}{.}\PYG{n+na}{valueOf}\PYG{o}{(\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{),} \PYG{n}{BigInteger}\PYG{o}{.}\PYG{n+na}{valueOf}\PYG{o}{(}\PYG{l+m+mi}{25}\PYG{o}{));}  \PYG{c+c1}{// rev=6\PYGZca{}\PYGZhy{}1mod25 要互质}
\PYG{n}{num} \PYG{o}{=} \PYG{n}{num}\PYG{o}{.}\PYG{n+na}{nextProbablePrime}\PYG{o}{();} \PYG{n}{num}\PYG{o}{.}\PYG{n+na}{intValue}\PYG{o}{();}
\PYG{n}{Scanner} \PYG{n}{cin}\PYG{o}{=}\PYG{k}{new} \PYG{n}{Scanner}\PYG{o}{(}\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{in}\PYG{o}{);}\PYG{c+c1}{//SimpleReader}
\PYG{k+kt}{int} \PYG{n}{n} \PYG{o}{=} \PYG{n}{cin}\PYG{o}{.}\PYG{n+na}{nextInt}\PYG{o}{();}
\PYG{k+kt}{int} \PYG{o}{[]} \PYG{n}{a} \PYG{o}{=} \PYG{k}{new} \PYG{k+kt}{int} \PYG{o}{[}\PYG{n}{n}\PYG{o}{];} \PYG{c+c1}{// 初值未定义}
\PYG{c+c1}{// Random rand.nextInt(N) [0,N)}
\PYG{n}{Arrays}\PYG{o}{.}\PYG{n+na}{sort}\PYG{o}{(}\PYG{n}{a}\PYG{o}{,} \PYG{l+m+mi}{5}\PYG{o}{,} \PYG{l+m+mi}{10}\PYG{o}{,} \PYG{n}{cmp}\PYG{o}{);} \PYG{c+c1}{// sort(a+5, a+10)}
\PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Long}\PYG{o}{\PYGZgt{}} \PYG{n}{list} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ArrayList}\PYG{o}{();} \PYG{c+c1}{// vector}
\PYG{c+c1}{// .add(val) .add(pos, val) .remove(pos)}
\PYG{n}{Comparator} \PYG{n}{cmp}\PYG{o}{=}\PYG{k}{new} \PYG{n}{Comparator}\PYG{o}{\PYGZlt{}}\PYG{n}{Long}\PYG{o}{\PYGZgt{}()\PYGZob{}} \PYG{c+c1}{// 自定义逆序}
  \PYG{n+nd}{@Override} \PYG{k+kd}{public} \PYG{k+kt}{int} \PYG{n+nf}{compare}\PYG{o}{(}\PYG{n}{Long} \PYG{n}{o1}\PYG{o}{,} \PYG{n}{Long} \PYG{n}{o2}\PYG{o}{)} \PYG{o}{\PYGZob{}}
  \PYG{c+cm}{/* o1 \PYGZlt{} o2 ? 1 :( o1 \PYGZgt{} o2  ? \PYGZhy{}1 : 0) */} \PYG{o}{\PYGZcb{}} \PYG{o}{\PYGZcb{};}
\PYG{c+c1}{// Collections. shuffle(list) sort(list, cmp)}
\PYG{n}{Long} \PYG{o}{[]} \PYG{n}{tmp} \PYG{o}{=} \PYG{n}{list}\PYG{o}{.}\PYG{n+na}{toArray}\PYG{o}{(}\PYG{k}{new} \PYG{n}{Long} \PYG{o}{[}\PYG{l+m+mi}{0}\PYG{o}{]);}
\PYG{c+c1}{// list.get(pos) list.size()}
\PYG{n}{Map}\PYG{o}{\PYGZlt{}}\PYG{n}{Integer}\PYG{o}{,}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n}{m} \PYG{o}{=} \PYG{k}{new} \PYG{n}{HashMap}\PYG{o}{\PYGZlt{}}\PYG{n}{Integer}\PYG{o}{,}\PYG{n}{String}\PYG{o}{\PYGZgt{}();}
\PYG{c+c1}{//m.put(key,val) get(key) containsKey(key) remove(key)}
\PYG{k}{for} \PYG{o}{(}\PYG{n}{Map}\PYG{o}{.}\PYG{n+na}{Entry}\PYG{o}{\PYGZlt{}}\PYG{n}{Integer}\PYG{o}{,}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n}{entry}\PYG{o}{:}\PYG{n}{m}\PYG{o}{.}\PYG{n+na}{entrySet}\PYG{o}{());} \PYG{c+c1}{//entry.getKey() getValue()}
\PYG{n}{Set}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n}{s} \PYG{o}{=} \PYG{k}{new} \PYG{n}{HashSet}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}();} \PYG{c+c1}{// TreeSet}
\PYG{c+c1}{//s.add(val)contains(val)remove(val);for(var : s)}
\PYG{n}{solver} \PYG{n}{Task}\PYG{o}{=}\PYG{k}{new} \PYG{n}{solver}\PYG{o}{();}\PYG{n}{Task}\PYG{o}{.}\PYG{n+na}{run}\PYG{o}{(}\PYG{n}{cin}\PYG{o}{,}\PYG{n}{System}\PYG{o}{.}\PYG{n+na}{out}\PYG{o}{);}
\PYG{n}{PriorityQueue}\PYG{o}{\PYGZlt{}}\PYG{n}{Integer}\PYG{o}{\PYGZgt{}} \PYG{n}{Q}\PYG{o}{=}\PYG{k}{new} \PYG{n}{PriorityQueue}\PYG{o}{\PYGZlt{}}\PYG{n}{Integer}\PYG{o}{\PYGZgt{}();}
\PYG{c+c1}{// Q. offer(val) poll() peek() size()}
\PYG{c+c1}{// Read / Write a file : FileWriter FileReader PrintStream}
\PYG{o}{\PYGZcb{}} \PYG{k+kd}{static} \PYG{k+kd}{class} \PYG{n+nc}{InputReader} \PYG{o}{\PYGZob{}} \PYG{c+c1}{// Fast Reader}
\PYG{k+kd}{public} \PYG{n}{BufferedReader} \PYG{n}{reader}\PYG{o}{;}
\PYG{k+kd}{public} \PYG{n}{StringTokenizer} \PYG{n}{tokenizer}\PYG{o}{;}
\PYG{k+kd}{public} \PYG{n+nf}{InputReader}\PYG{o}{(}\PYG{n}{InputStream} \PYG{n}{stream}\PYG{o}{)} \PYG{o}{\PYGZob{}}
	\PYG{n}{reader} \PYG{o}{=} \PYG{k}{new} \PYG{n}{BufferedReader}\PYG{o}{(}\PYG{k}{new} \PYG{n}{InputStreamReader}\PYG{o}{(}\PYG{n}{stream}\PYG{o}{),} \PYG{l+m+mi}{32768}\PYG{o}{);}
	\PYG{n}{tokenizer} \PYG{o}{=} \PYG{k+kc}{null}\PYG{o}{;} \PYG{o}{\PYGZcb{}}
\PYG{k+kd}{public} \PYG{n}{String} \PYG{n+nf}{next}\PYG{o}{()} \PYG{o}{\PYGZob{}}
	\PYG{k}{while} \PYG{o}{(}\PYG{n}{tokenizer}\PYG{o}{==}\PYG{k+kc}{null}\PYG{o}{||!}\PYG{n}{tokenizer}\PYG{o}{.}\PYG{n+na}{hasMoreTokens}\PYG{o}{())} \PYG{o}{\PYGZob{}}
		\PYG{k}{try} \PYG{o}{\PYGZob{}} \PYG{n}{String} \PYG{n}{line} \PYG{o}{=} \PYG{n}{reader}\PYG{o}{.}\PYG{n+na}{readLine}\PYG{o}{();}
			\PYG{c+cm}{/*line == null ? end of file*/}
			\PYG{n}{tokenizer} \PYG{o}{=} \PYG{k}{new} \PYG{n}{StringTokenizer}\PYG{o}{(}\PYG{n}{line}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}} \PYG{k}{catch} \PYG{o}{(}\PYG{n}{IOException} \PYG{n}{e}\PYG{o}{)} \PYG{o}{\PYGZob{}}
			\PYG{k}{throw} \PYG{k}{new} \PYG{n}{RuntimeException}\PYG{o}{(}\PYG{n}{e}\PYG{o}{);} \PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}} \PYG{k}{return} \PYG{n}{tokenizer}\PYG{o}{.}\PYG{n+na}{nextToken}\PYG{o}{();} \PYG{o}{\PYGZcb{}}
\PYG{k+kd}{public} \PYG{n}{BigInteger} \PYG{n+nf}{nextInt}\PYG{o}{()} \PYG{o}{\PYGZob{}}
	\PYG{c+c1}{//return Long.parseLong(next()); Double Integer}
	\PYG{k}{return} \PYG{k}{new} \PYG{n}{BigInteger}\PYG{o}{(}\PYG{n}{next}\PYG{o}{(),} \PYG{l+m+mi}{16}\PYG{o}{);} \PYG{c+c1}{// as Hex}
\PYG{o}{\PYGZcb{}} \PYG{o}{\PYGZcb{}} \PYG{o}{\PYGZcb{}}
\end{Verbatim}
